// Code generated by MockGen. DO NOT EDIT.
// Source: ./src/notification/infrastructure/third_party/forecast.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	infrastructure "github.com/juandr89/delivery-notifier-buyer/src/notification/infrastructure/third_party"
)

type MockForecastService struct {
	ctrl     *gomock.Controller
	recorder *MockForecastServiceMockRecorder
}

type MockForecastServiceMockRecorder struct {
	mock *MockForecastService
}

func NewMockForecastService(ctrl *gomock.Controller) *MockForecastService {
	mock := &MockForecastService{ctrl: ctrl}
	mock.recorder = &MockForecastServiceMockRecorder{mock}
	return mock
}

func (m *MockForecastService) EXPECT() *MockForecastServiceMockRecorder {
	return m.recorder
}

func (m *MockForecastService) FetchForecastByLocation(longitude, latitude, days string) (*infrastructure.ForecastServiceResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchForecastByLocation", longitude, latitude, days)
	ret0, _ := ret[0].(*infrastructure.ForecastServiceResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (mr *MockForecastServiceMockRecorder) FetchForecastByLocation(longitude, latitude, days interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchForecastByLocation", reflect.TypeOf((*MockForecastService)(nil).FetchForecastByLocation), longitude, latitude, days)
}


